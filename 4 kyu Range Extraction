/* A format for expressing an ordered list of integers is to use a comma separated list of either

individual integers
or a range of integers denoted by the starting integer separated from the end integer 
in the range by a dash, '-'. The range includes all integers in the interval including 
both endpoints. It is not considered a range unless it spans at least 3 numbers. For example "12,13,15-17"
Complete the solution so that it takes a list of integers in increasing order and
returns a correctly formatted string in the range format.

Example:

solution([-10, -9, -8, -6, -3, -2, -1, 0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 14, 15, 17, 18, 19, 20])
# returns "-10--8,-6,-3-1,3-5,7-11,14,15,17-20"
Courtesy of rosettacode.org */

-----------------------------------------------------------------------------------------------------------------------------------------------------------

def solution(args):
    args.append(args[-1])
    res = []
    i, j = 0, 0
    while i < len(args) - 1:
        subarr = [args[i]]
        if args[i] - args[i + 1] == -1:
            subarr.append(args[i + 1])
            j = i + 1
            while j < len(args) - 1:
                if args[j] - args[j + 1] == -1:
                    subarr.append(args[j + 1])
                else: 
                    i = j
                    break
                j += 1    
        i += 1
        res.append(subarr)
    result_arr = []
    for i in range(len(res)):
        if len(res[i]) > 2:
            result_arr.append(f"{res[i][0]}-{res[i][-1]}")
        if len(res[i]) == 2:
            result_arr.append(f"{res[i][0]}")
            result_arr.append(f"{res[i][-1]}")
        if len(res[i]) == 1:
            result_arr.append(f"{res[i][0]}")
              
    return ",".join(result_arr)
    # your code here
