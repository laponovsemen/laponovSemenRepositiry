/* Build Tower Advanced
Build Tower by the following given arguments:

number of floors (integer and always greater than 0)
block size (width, height) (integer pair and always greater than (0, 0))
Tower block unit is represented as *. Tower blocks of block size (2, 1) and (2, 3) would look like respectively:

  **
  **
  **
  **
for example, a tower of 3 floors with block size = (2, 3) looks like below

[
  '    **    ',
  '    **    ',
  '    **    ',
  '  ******  ',
  '  ******  ',
  '  ******  ',
  '**********',
  '**********',
  '**********'
]
and a tower of 6 floors with block size = (2, 1) looks like below

[
  '          **          ', 
  '        ******        ', 
  '      **********      ', 
  '    **************    ', 
  '  ******************  ', 
  '**********************'
]
Don't return a whole string containing line-endings but a list/array/vector of strings instead!

This kata might looks like a 5.5kyu one. So challenge yourself!

Go take a look at Build Tower which is a more basic version :) */


-------------------------------------------------------------------------------------------------------------------------------------------------------------------



function towerBuilder(nFloors, nBlockSz) {
  // build here
   
  
  let resArray = [];
  //let x = ((nBlockSz[0] - 1) * nFloors - 1)  >= 0  ? ((nBlockSz[0] - 1) * nFloors - 1) : 0 ;
  let x = nBlockSz[0] * (2 * (nFloors - 1) )
  for(let i = 0; i < nFloors; i++){
    for(let j  = 0 ; j < nBlockSz[1]; j++){
      resArray.push(" ".repeat((x - (x/(nFloors - 1)) * i) / 2) + "*".repeat(nBlockSz[0] * (2 * i + 1)) +  " ".repeat((x - (x/(nFloors - 1)) * i) / 2));
      }
    }
  return resArray;

}
