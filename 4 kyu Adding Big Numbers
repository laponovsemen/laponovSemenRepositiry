/*We need to sum big numbers and we require your help.

Write a function that returns the sum of two numbers. The input numbers are strings and the function must return a string.

Example
add("123", "321"); -> "444"
add("11", "99");   -> "110"
Notes
The input numbers are big.
The input is a string of only digits
The numbers are positives*/

------------------------------------------------------------------------------------------------------------------------------------------------------------------


function add(a, b) {
  var newA ;
  var newB ;
  var res = [];
  var input = 0;
  var nextDigit = 0;
  if(a.length > b.length ){
    newA = "0" + a;
    newB = "0".repeat(a.length - b.length + 1) + b;
  }else{
    newB = "0" + b;
    newA = "0".repeat(b.length - a.length + 1) + a;
  }
  for(let i = newA.length - 1; i >= 0; i--){
    input = (Number(newA[i]) + Number(newB[i])) < 10 ? (Number(newA[i]) + Number(newB[i])) : (Number(newA[i]) + Number(newB[i]) - 10) ;
    if(input + nextDigit == 10){
      input = 0;
      nextDigit = 1;
      res.unshift(input);
      }else{
    res.unshift(input + nextDigit); 
    nextDigit = nextDigit == 1 ? nextDigit -- : nextDigit;
    nextDigit = (Number(newA[i]) + Number(newB[i]) >= 10) ? 1 : 0 ;
      
         }
    }
  if(res[0] == 0){
      res.shift();
    }  
    
  return  res.join(""); // Fix me! 
}

console.log(add("1123", "3"));
/*
     '63829983432984289347293874'
  '90938498237058927340892374089'
  '90912328220491911621239667963'
  '91002328220491911630239667963'
*/



//  '91002328220491911630239667963'
//'9091023282204919116210239667963'
